version: '3'
services:
  web:
    build: ./didauday-web
    volumes:
      - /app/node_modules
    restart: always
  dashboard:
    build: ./didauday-dashboard
    volumes:
      - /app/node_modules
    restart: always
  tour:
    build:
      context: ./didauday-server/services/tour
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./didauday-server/services/tour:/app
    depends_on:
      - mongo
      - neo4j
      - redis
    environment:
      - PORT=5001
      - NEO4J_PROTOCOL=bolt
      - NEO4J_HOST=neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=annq
      - NEO4J_PORT=7687
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB_NAME=didauday
    restart: always
  user:
    build:
      context: ./didauday-server/services/user
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./didauday-server/services/user:/app
    depends_on:
      - mongo
      - neo4j
      - redis
    environment:
      - PORT=5002
      - NEO4J_PROTOCOL=bolt
      - NEO4J_HOST=neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=annq
      - NEO4J_PORT=7687
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB_NAME=didauday
    restart: always
  move-data:
    build:
      context: ./didauday-server/services/move-data
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./didauday-server/services/move-data:/app
    depends_on:
      - mongo
      - neo4j
    environment:
      - NEO4J_PROTOCOL=bolt
      - NEO4J_HOST=neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=annq
      - NEO4J_PORT=7687
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB_NAME=didauday
    restart: always
  server:
    build:
      context: ./didauday-server/gateway
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./didauday-server/gateway:/app
    depends_on:
      - tour
      - user
    environment:
      - TOUR_URL=http://tour:5001/graphql
      - USER_URL=http://user:5002/graphql
      - PORT=5000
    restart: always
  mongo:
    image: mongo
    volumes:
      - ./databases/mongo/db:/data/db
    restart: always
  neo4j:
    image: neo4j
    volumes:
      - ./databases/neo4j/db:/data/db
    environment:
      - NEO4J_AUTH=neo4j/annq
    restart: always
  redis:
    image: redis
    volumes:
      - ./databases/redis/db:/data/db
    restart: always
  web-server:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./web-server/conf.d:/etc/nginx/conf.d
    restart: always
    depends_on:
      - web
      - dashboard
      - server